variables:
  CI_NAME: "GitLab CI"
  CI_TMP_DIR: "${CI_PROJECT_DIR}.tmp"
  PULL_REQUEST: "true"  # Not sure how to tell MR builds vs. anything else

# Disable GitLab CI's default cache policy of "pull-push"
# https://docs.gitlab.com/ee/ci/yaml/#cache-policy
# https://docs.gitlab.com/ce/ci/caching/index.html#disabling-cache-on-specific-jobs
cache: {}

.test_metadata: &test_metadata
  image: amazonlinux:2
  tags:
    - docker-ci
  before_script:
    # Grant access to registered private packages
    - yum install -y -q curl tar git findutils sed
    - |
      if [[ "$CI_JULIA_VERSION" == "0.6" ]]; then
        REGEX="s;https://gitlab.invenia.ca/;https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.invenia.ca/;"
        find "$CI_PROJECT_DIR" -maxdepth 2 -name url | xargs sed -i -e "$REGEX"
      else
        curl -s -o julia-ci https://gitlab.invenia.ca/infrastructure/gitlab-ci-helper/raw/master/julia-ci
        chmod +x julia-ci
        ./julia-ci install-cred-helper
      fi
    # Install requirements for .test/ci.sh and .test/check-https.sh
    - yum install -y -q curl tar gzip git
  script:
    - sh .test/check-https.sh gitlab.invenia.ca
    - sh .test/ci.sh

"0.6 Metadata":
  variables:
    CI_JULIA_VERSION: "0.6"
  <<: *test_metadata

"0.7 Metadata":
  variables:
    CI_JULIA_VERSION: "0.7"
  <<: *test_metadata

"1.0 Metadata":
  variables:
    CI_JULIA_VERSION: "1.0"
  <<: *test_metadata

"Nightly Metadata":
  variables:
    CI_JULIA_VERSION: "nightly"
  <<: *test_metadata


"Sync PackageRegistry":
  stage: deploy
  image: amazonlinux:2
  tags:
    - docker-ci
  before_script:
    # The protected environment variable REGISTRY_DEPLOY_KEY will only be present on CI
    # builds from protected branches and tags. In particular, this means attempting to deploy
    # from a merge request for the purposes of debugging will not work unless the feature
    # branch is protected.
    # See https://docs.gitlab.com/ee/user/project/protected_branches.html
    - |
        if [ -z "${REGISTRY_DEPLOY_KEY}" ]; then
          echo "REGISTRY_DEPLOY_KEY is not set. Are you running on a protected branch/tag?" >&2
          exit 1
        fi
    # Install deploy key which allows us to push to PackageRegistry
    - '[ -d ~/.ssh ] || mkdir -m 700 ~/.ssh'
    - pushd ~/.ssh
    - echo "${REGISTRY_DEPLOY_KEY}" > deploy
    - chmod 400 ~/.ssh/deploy
    - popd
    # Setup Julia
    - export GIT_SSH_COMMAND="ssh -i ~/.ssh/deploy -o StrictHostKeyChecking=no"
    - yum install -y -q curl tar git
    - curl -s -o julia-ci https://gitlab.invenia.ca/infrastructure/gitlab-ci-helper/raw/master/julia-ci
    - chmod +x julia-ci
    - ./julia-ci install-cred-helper
    - ./julia-ci install 1.0
    - source julia-ci export
    # A source clone of Julia is required by code that looks at stdlib packages
    - rm -rf "${CI_TMP_DIR}/julia_source"
    - git clone https://github.com/JuliaLang/julia.git "${CI_TMP_DIR}/julia_source" --depth 1
  script:
    - julia --color=yes "${CI_PROJECT_DIR}/.deploy/update.jl"
    - cd "${JULIA_DEPOT_PATH}/registries/Invenia"
    - '[ -z "$(git status -s)" ] && exit 0'  # no changes to private packages
    - git add -A
    - git -c user.name="METADATA Auto-Deployment" -c user.email="gitlab@invenia.ca" commit -m "Incorporate changes from METADATA"
    - git -c url.ssh://git@.pushInsteadOf=https:// push origin master
  only:
    - invenia # Only deploy from builds on the default branch!
